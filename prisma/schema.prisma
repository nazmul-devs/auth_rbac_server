generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ======================
// Models
// ======================
model User {
  id                   String         @id @default(uuid())
  name                 String?
  mobile               String?
  email                String         @unique
  username             String         @unique
  password_hash        String
  verification_token   String?
  verification_expires DateTime?
  two_fa_enabled       Boolean        @default(false)
  is_verified          Boolean        @default(false)
  is_active            Boolean        @default(true)
  created_at           DateTime       @default(now())
  updated_at           DateTime       @updatedAt
  roles                UserRole[]
  refresh_tokens       RefreshToken[]
}

model Role {
  id          String           @id @default(uuid())
  name        String           @unique
  description String?
  permissions RolePermission[]
  users       UserRole[]
}

model Permission {
  id    String           @id @default(uuid())
  name  String           @unique
  desc  String?
  roles RolePermission[]
}

model UserRole {
  id      String @id @default(uuid())
  user    User   @relation(fields: [user_id], references: [id])
  user_id String
  role    Role   @relation(fields: [role_id], references: [id])
  role_id String
}

model RolePermission {
  id            String     @id @default(uuid())
  role          Role       @relation(fields: [role_id], references: [id])
  role_id       String
  permission    Permission @relation(fields: [permission_id], references: [id])
  permission_id String
}

model RefreshToken {
  id             String   @id @default(uuid())
  token_hash     String   @unique
  user_id        String
  revoked        Boolean  @default(false)
  created_at     DateTime @default(now())
  device_id      String? // unique per device
  device_name    String? // optional, e.g., "Chrome Desktop"
  replaced_by_id String?
  expires_at     DateTime
  user           User     @relation(fields: [user_id], references: [id])
}
